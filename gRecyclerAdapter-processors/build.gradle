apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion
group = groupIdNameP
version = libVersion

sourceSets {
    processor
}

sourceSets.all { set ->
    def jarTask = task("${set.name}Jar", type: Jar) {
        baseName = "$set.name"
        from set.output
    }

    artifacts {
        archives jarTask
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.android.support:support-annotations:$supportLibraryVersion"
    implementation "com.google.auto.service:auto-service:$auto_service"
    implementation "com.squareup:kotlinpoet:$kotlinpoet"
    //api project(path: ':gRecyclerAdapter-annotations')
}


compileKotlin {
    kotlinOptions {
        jvmTarget = jdkVersion
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = jdkVersion
    }
}

jar {
    from sourceSets.processor.output
}

// this step is necessary when installing both jars in the local maven repository
install {
    repositories.mavenInstaller {
        addFilter('processor') { artifact, file -> artifact.name.endsWith('processor') }
    }
}
/*

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
*/
