apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools

    configurations.all {
        resolutionStrategy {
            force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        }
    }
    defaultConfig {
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode versionCode
        versionName versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled minify
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility = jdkVersion
        targetCompatibility = jdkVersion
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.recyclerview:recyclerview:$recyclerView"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.core:core-ktx:$ktx"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
/*
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}*/

artifacts {
    //   archives javadocJar
    archives sourcesJar
}

group = 'in.dilwar'
version = libVersion

install {
    repositories.mavenInstaller {
        pom.project {
            name 'genericRecyclerAdapter'
            description 'A library for finding out whether'
            url 'https://github.com/dilwarSingh/genericRecyclerViewAdapterSample'
            inceptionYear inception_year

            packaging 'aar'
            groupId 'in.dilwar'
            artifactId 'genericRecyclerAdapter'
            version libVersion

            licenses {
                license {
                    name 'GPL-3.0-only'
                    url 'https://opensource.org/licenses/GPL-3.0'
                }
            }
            scm {
                connection 'https://github.com/dilwarSingh/genericRecyclerViewAdapterSample.git'
                url 'https://github.com/dilwarSingh/genericRecyclerViewAdapterSample'

            }
            developers {
                developer {
                    id = 'dilwarSingh'
                    name 'dilwarSingh'
                    //gradlew install bintrayUpload
                }
            }
        }
    }
}

Properties localProperties = new Properties()
localProperties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = localProperties.getProperty('user')
    key = localProperties.get('key')
    configurations = ['archives']
    pkg {
        repo = 'genericRecyclerAdapter'
        name = 'genericRecyclerAdapter'
        //   userOrg = 'evacuees'
        licenses = ['GPL-3.0']
        vcsUrl = 'https://github.com/dilwarSingh/genericRecyclerViewAdapterSample.git'
        publish = true
        version {
            name = libVersion
            desc = 'genericRecyclerAdapter'
            released = new Date()
            vcsTag = "v$libVersion"
        }
    }
}
